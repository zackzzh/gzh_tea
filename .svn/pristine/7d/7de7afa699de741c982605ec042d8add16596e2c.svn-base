new Vue({
    el: '#main_div',
    data() {
        return {
            commodity: [],
            total: 0,
            address: {},
            order_type: null,
            goods_id: null,
            invoice_id: null,
            remark: '',
            invoice_text: '',
            quantity: null,
            confirmOrder: {},
            payRadio: '1',
            unique_key: '',
            checked: false, //是否开启积分
            integral: null, //输入积分
            now_integral: null, //当前积分
            customerInfo: {}, //用户信息
            freight_amount: null, //运费
            integral_price: null, //积分价格
        }
    },
    mounted() {
        /**
         * getAddress 用于获取本地址信息
         * confirmOrder  有两种可能一：小批量定制商品。二：现有商品定制 用于获取预览订单，创建订单
         * invoice_id 用户获取发票信息
         */
        const getAddress = JSON.parse(sessionStorage.getItem("address"))
        const confirmOrder = JSON.parse(sessionStorage.getItem("confirmOrder"))
        const invoice_id = JSON.parse(sessionStorage.getItem("invoice_id"))
        var share_unique_key = JSON.parse(sessionStorage.getItem("share_unique_key"))
        if (share_unique_key && share_unique_key.data) {
            this.unique_key = share_unique_key.data
        }
        // 地址
        if (getAddress) {
            this.address = getAddress
            console.log('address', this.address)
        }
        // 发票信息
        if (invoice_id) {
            this.invoice_id = invoice_id.id
            this.invoice_text = invoice_id.invoice_text
        }
        // 订单类型
        this.confirmOrder = confirmOrder
        this.quantity = confirmOrder.quantity
        this.order_type = confirmOrder.order_type
        this.goods_id = confirmOrder.goods_id
        this.load(confirmOrder);

        this.userData()
    },
    methods: {
        onClickLeft(val) {
            $go({
                path: 'shopping'
            })
        },
        /**
         * 用户信息获取
         */
        userData() {
            $api.customerInfo().then(res => {
                this.customerInfo = res.data
            })
        },
        /**
         * 
         * @param {*} val 
         */
        integralChange() {
            console.log('integral', this.integral)
            console.log('consumption_interal', this.customerInfo.integral)
            if (this.integral <= Number(this.customerInfo.integral_config.consumption_interal)) {
                this.integral_price = Number(this.integral * (this.customerInfo.integral_config.deduction_amount / this.customerInfo.integral_config.consumption_interal))
            } else {
                vant.Toast.fail({
                    message: '你的积分不足，请重新输入'
                })
                this.integral = null
            }
        },
        // 获取商品信息
        load(val) {
            $myAPi.generate(val).then((res) => {
                res.data.goods_list.forEach((data) => {
                    data.price = Math.floor(data.price * 100) / 100
                })
                this.commodity = res.data.goods_list
                if (Object.keys(this.address).length > 0) {} else {
                    this.address = res.data.address
                }
                this.freight_amount = res.data.freight_amount
                this.total = Math.floor(res.data.total_amount * 100) / 100
            })
        },
        // 获取地址信息
        toAddress() {
            var item = {
                type: 'selectAddress'
            }
            sessionStorage.setItem("sAddress", JSON.stringify(item))
            $go({
                path: 'address',
            })
        },
        // 发票
        needInvoice(val) {
            var item = {
                type: 'confirmOrder'
            }
            sessionStorage.setItem("invoice_type", JSON.stringify(item))
            $go({
                path: 'invoice'
            })
        },
        // 支付
        create() {
            var val = {
                goods_id: this.goods_id,
                order_type: this.order_type,
                address_id: this.address.id,
                remark: this.remark,
                invoice_id: this.invoice_id,
                quantity: this.quantity,
                unique_key: this.unique_key
            }
            // 创建订单
            $myAPi.create(Object.assign(val, this.confirmOrder)).then((res) => {
                $toast(res)
                if (res.state == 1) {
                    var value = {
                        index: -1
                    }
                    sessionStorage.setItem("orderindex", JSON.stringify(value))
                    sessionStorage.removeItem("address")
                    sessionStorage.removeItem("invoice_id")
                    if (this.checked) {
                        if (this.integral_price > 0) {
                            $api.payWechat({
                                order_number: res.data,
                                integral: this.integral
                            }).then(resWechat => {
                                $toast(resWechat)
                                if (resWechat.state == 1) {
                                    WeixinJSBridge.invoke(
                                        'getBrandWCPayRequest', {
                                            "appId": resWechat.data.appId, //公众号名称，由商户传入     
                                            "timeStamp": resWechat.data.timeStamp, //时间戳，自1970年以来的秒数     
                                            "nonceStr": resWechat.data.nonceStr, //随机串     
                                            "package": resWechat.data.package,
                                            "signType": "MD5", //微信签名方式：     
                                            "paySign": resWechat.data.paySign //微信签名 
                                        },
                                        function (d) {
                                            if (d.err_msg == "get_brand_wcpay_request:ok") {
                                                $toast(res, 'orders')
                                            }
                                        });
                                }
                                if (resWechat.state == 100) {
                                    $toast(res, 'orders')
                                }
                            })
                        } else {
                            $api.payWechat({
                                order_number: res.data,
                            }).then(resWechat => {
                                $toast(resWechat)
                                if (resWechat.state == 1) {
                                    WeixinJSBridge.invoke(
                                        'getBrandWCPayRequest', {
                                            "appId": resWechat.data.appId, //公众号名称，由商户传入     
                                            "timeStamp": resWechat.data.timeStamp, //时间戳，自1970年以来的秒数     
                                            "nonceStr": resWechat.data.nonceStr, //随机串     
                                            "package": resWechat.data.package,
                                            "signType": "MD5", //微信签名方式：     
                                            "paySign": resWechat.data.paySign //微信签名 
                                        },
                                        function (d) {
                                            if (d.err_msg == "get_brand_wcpay_request:ok") {
                                                $toast(res, 'orders')
                                            }
                                        });
                                }
                            })
                        }
                    } else {
                        $api.payWechat({
                            order_number: res.data,
                        }).then(resWechat => {
                            $toast(resWechat)
                            if (resWechat.state == 1) {
                                WeixinJSBridge.invoke(
                                    'getBrandWCPayRequest', {
                                        "appId": resWechat.data.appId, //公众号名称，由商户传入     
                                        "timeStamp": resWechat.data.timeStamp, //时间戳，自1970年以来的秒数     
                                        "nonceStr": resWechat.data.nonceStr, //随机串     
                                        "package": resWechat.data.package,
                                        "signType": "MD5", //微信签名方式：     
                                        "paySign": resWechat.data.paySign //微信签名 
                                    },
                                    function (d) {
                                        if (d.err_msg == "get_brand_wcpay_request:ok") {
                                            $toast(res, 'orders')
                                        }
                                    });
                            }
                        })
                    }
                }
            })
        },
    },
});